{"version":3,"sources":["components/form/form.js","components/weather/weather.js","app.js","index.js"],"names":["Form","props","loadweather","error","className","onSubmit","type","name","placeholder","Weather","id","cityname","temp_celsius","temp_min","temp_max","description","undefined","weatherIcon","App","getWeather","e","a","preventDefault","country","target","value","city","setState","fetch","response","json","data","weather","sys","main","celsius","Math","floor","temp","state","icon","this","Component","Root","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbb39b86.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./form.scss\";\r\n\r\nconst Form = props => {\r\n  const { loadweather, error } = props;\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={loadweather}>\r\n        <div>\r\n          {\r\n            error ? \r\n              <div className=\"alert alert-danger font-weight-bold\">\r\n                Please Enter Both City and Country ... !\r\n              </div>\r\n            : \r\n              null            \r\n          }\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <input type=\"text\" name=\"city\" placeholder=\"City\" className=\"form-control\" />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <input type=\"text\" name=\"country\" placeholder=\"Country\" className=\"form-control\" />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <button className=\"btn btn-success\">Get Weather</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\nimport \"./weather.scss\";\r\n\r\nconst Weather = props => {\r\n\r\n  const { id, cityname, temp_celsius, temp_min, temp_max, description, } = props;\r\n\r\n  let weatherIcon = (id) => {\r\n\r\n    if (id >= 200 && id < 232) return `wi-thunderstorm`;\r\n    else if (id >= 300 && id <= 321) return `wi-sleet`;\r\n    else if (id >= 500 && id <= 521) return `wi-storm-showers`;\r\n    else if (id >= 600 && id <= 622) return `wi-snow`;\r\n    else if (id >= 701 && id <= 781) return `wi-fog`;\r\n    else if (id === 800) return `wi-day-sunny`;\r\n    else if (id >= 801 && id <= 804) return `wi-day-fog`;\r\n    else if(id === undefined) return `wi-day-fog`;\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5 text-light\">             \r\n      {\r\n        temp_celsius ? (\r\n          <>\r\n            <div className=\"Card mx-auto content\"> \r\n              <h1 className=\"text-white py-3\">{cityname}</h1>\r\n              <h5 className=\"py-4\"><i className={`wi ${weatherIcon(id)} display-1`} /></h5>\r\n              <div className=\"py-3\">\r\n                <h1 className=\"py-2\">{temp_celsius}&deg;</h1>\r\n                <span className=\"px-4\">{temp_min}&deg;</span>\r\n                <span className=\"px-4\">{temp_max}&deg;</span>\r\n              </div>\r\n              <h4 className=\"py-3 text-capitalize\">{description}</h4>\r\n            </div>\r\n          </>\r\n        )\r\n        : null\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;","import React, { Component } from \"react\";\r\nimport Form from \"./components/form/form.js\";\r\nimport Weather from \"./components/weather/weather.js\";\r\nimport \"./app.scss\";\r\n\r\nconst myKey = \"15a78bdf7be0fd8857aa0222e8baa4b1\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      city: '',\r\n      country: '',\r\n      icon: '',\r\n      main: '',\r\n      celsius: null,\r\n      temp_max: null,\r\n      temp_min: null,\r\n      description: '',\r\n      error: false\r\n    };\r\n  }\r\n\r\n  getWeather = async e => {\r\n    e.preventDefault();\r\n\r\n    const country = e.target.country.value;\r\n    const city = e.target.city.value;\r\n\r\n    if (!(country && city) || city === '' || country === '') {\r\n      this.setState({ error: true });\r\n      return;\r\n    }\r\n\r\n    const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${myKey}`);\r\n\r\n    const data = await response.json();\r\n\r\n    this.setState({\r\n      id: data.weather[0].id,\r\n      city: `${data.name}, ${data.sys.country}`,\r\n      country: data.sys.country,\r\n      main: data.weather[0].main,\r\n      celsius: Math.floor(data.main.temp - 273.15),\r\n      temp_max: Math.floor(data.main.temp_max - 273.15),\r\n      temp_min: Math.floor(data.main.temp_min - 273.15),\r\n      description: data.weather[0].description,\r\n      error: false\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Form loadweather={this.getWeather} error={this.state.error} />\r\n        <Weather\r\n          id={this.state.id}\r\n          cityname={this.state.city}\r\n          temp_celsius={this.state.celsius}\r\n          temp_max={this.state.temp_max}\r\n          temp_min={this.state.temp_min}\r\n          description={this.state.description}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"weather-icons/css/weather-icons.css\";\r\nimport App from './app';\r\nimport './index.scss';\r\n\r\nconst Root = () => {\r\n    return (\r\n        <>\r\n            <App />\r\n        </>\r\n    )\r\n}\r\n\r\nrender(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}